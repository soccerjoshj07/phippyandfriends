name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  acrName: phippyaksdemo

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        image: [app.parrot, app.captainkube, app.nodebrady, app.phippy]

    runs-on: ubuntu-latest
    env:
      #tag: 1.0.${{ github.run_number }}
      test2: $(cut -d'.' -f2 <<< ${{ matrix.image }} | tr "[:upper:]" "[:lower:]")
      tags: 1.0.${{ github.run_number }}, ${{ github.sha }}, latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Build the Docker image
      run: | 
        set -euxo pipefail
        echo ${{ env.test }}

        dockerBuildCmd="docker build --file ${{ env.test2 }}/Dockerfile "
        
        for i in $(echo ${{ env.tags }} | sed "s/,/ /g")
        do
            tag+="--tag {{ env.acrName}}.azurecr.io/${{ env.test2 }}:$i "
        done

        dockerBuildCmd+="$tag${{ env.test2 }}"
        eval $dockerBuildCmd

        #docker build --file ${{ env.test2 }}/Dockerfile --tag ${{ env.acrName}}.azurecr.io/${{ env.test2 }}:${{ env.tag }} ${{ env.test2 }}
        echo "::set-env name=test::${{ env.test }}"
      env: 
        test: $(cut -d'.' -f2 <<<${{ matrix.image }})
      
    - name: Azure Login
      uses: Azure/login@v1
      with:
        # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
        creds: ${{ secrets.AZURE_SUBSCRIPTION }}
    
    - name: Setup Authentication
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: | 
          set -euxo pipefail
          ACR_ACCESS_TOKEN=$(az acr login -n ${{ env.acrName }} --expose-token | jq '.accessToken' -r)
          echo "::add-mask::$ACR_ACCESS_TOKEN"
          echo "::set-env name=ACR_ACCESS_TOKEN::$ACR_ACCESS_TOKEN"
          
    - name: Push to ACR
      run: |
        set -euxo pipefail
        echo ${{ env.ACR_ACCESS_TOKEN }} | docker login ${{ env.acrName}}.azurecr.io -u 00000000-0000-0000-0000-000000000000 --password-stdin
        # array=( ${{env.tag}} latest )
        # for i in "${array[@]}"; do
        #     echo "heres the: $i"
        #     docker push ${{ env.acrName}}.azurecr.io/${{ env.test2 }}:$i
        # done
        
        for i in $(echo ${{ env.tags }} | sed "s/,/ /g")
        do
            docker push ${{ env.acrName}}.azurecr.io/${{ env.test2 }}:$i
        done
    

