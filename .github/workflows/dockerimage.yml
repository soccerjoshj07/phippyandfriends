name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  acrName: phippyaksdemo

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        image: [parrot, captainkube, nodebrady, phippy]

    runs-on: ubuntu-latest
    env:
      #image: parrot
      tag: 1.0.${{ github.run_number }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Build the Docker image
      run: | 
        docker build ${{ matrix.image }} --file ${{ matrix.image }}/Dockerfile --tag ${{ env.acrName}}.azurecr.io/${{ matrix.image }}:${{ env.tag }}
      
    - name: Azure Login
      uses: Azure/login@v1
      with:
        # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
        creds: ${{ secrets.AZURE_SUBSCRIPTION }}
    
    - name: Setup Authentication
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: | 
          ACR_ACCESS_TOKEN=$(az acr login -n ${{ env.acrName }} --expose-token | jq '.accessToken' -r)
          echo "::add-mask::$ACR_ACCESS_TOKEN"
          echo "::set-env name=ACR_ACCESS_TOKEN::$ACR_ACCESS_TOKEN"
          
    - name: Push to ACR
      run: |
        echo ${{ env.ACR_ACCESS_TOKEN }} | docker login ${{ env.acrName}}.azurecr.io -u 00000000-0000-0000-0000-000000000000 --password-stdin
        docker push ${{ env.acrName}}.azurecr.io/${{ matrix.image }}:${{ env.tag }}
    

