# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches: 
    include: 
      - master
  paths:
    exclude:
      - azure-pipelines.yml

resources:
  repositories:
  - repository: templates
    name: pipeline-templates
    type: git

variables:
  # Azure Container Registry variables
  dockerRegistryServiceConnection: 'soccerjoshj07-aciphippydemo'
  imageRepository: 'phippyandfriends'
  containerRegistry: 'aciphippydemo.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildNumber)'
  imagePullSecret: 'aciphippyaksdemo11879e66-auth'
  environment: soccerjoshj07sub1-phippyandfriends.phippyandfriends # Environment in Azure DevOps, EnvName.namespace
  kubernetesServiceConnection: soccerjoshj07sub1-phippyandfriends-aks-phippyaksdemo-sub1-phippyandfriends-1581430770201
  namespace: phippyandfriends
  varGroup: phippyandfriends-aks-sub1

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - template: k8s/job-k8s-build.yml@templates
    parameters:
      dockerRegistryServiceConnection: $(dockerRegistryServiceConnection)
      tag: $(tag)
      services:
        - serviceName: parrot
          imageRepository: $(imageRepository)-parrot
          projectPath: parrot
          skip: false
        - serviceName: captainkube
          imageRepository: $(imageRepository)-captainkube
          projectPath: captainkube
          skip: false
        - serviceName: phippy
          imageRepository: $(imageRepository)-phippy
          projectPath: phippy
          skip: false
        - serviceName: nodebrady
          imageRepository: $(imageRepository)-nodebrady
          projectPath: nodebrady
          skip: false

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  variables:
    # Stage Variables to be used as environment tokens to be replaced
    appEnvironmentName: Demo-Sub1
    databaseName: demodb

  jobs:
  - template: k8s/job-k8s-deploy-helm.yml@templates
    parameters:
      # Azure Container Registry variables
      dockerRegistryServiceConnection: $(dockerRegistryServiceConnection)
      #containerRegistry: $(containerRegistry)
      #tag: $(tag)
      # Deployment variables
      imagePullSecret: $(imagePullSecret)
      environment: $(environment)
      kubernetesServiceConnection: $(kubernetesServiceConnection)
      namespace: $(namespace)
      # Environment-specific variables
      varGroup: ${{ variables.varGroup }}
      appEnvironmentName: $(appEnvironmentName)
      databaseName: $(databaseName)
      services:
        - serviceName: parrot
          imageRepository: $(imageRepository)-parrot
          skip: false
          overrides: ingress.enabled=true,image.repository=$(containerRegistry)/$(imageRepository)-parrot,image.tag=$(tag),image.useImagePullSecrets=true
        - serviceName: captainkube
          imageRepository: $(imageRepository)-captainkube
          skip: false
          overrides: ingress.enabled=false,image.repository=$(containerRegistry)/$(imageRepository)-captainkube,image.tag=$(tag),image.useImagePullSecrets=true
        - serviceName: phippy
          imageRepository: $(imageRepository)-phippy
          skip: false
          overrides: ingress.enabled=false,image.repository=$(containerRegistry)/$(imageRepository)-phippy,image.tag=$(tag),image.useImagePullSecrets=true
        - serviceName: nodebrady
          imageRepository: $(imageRepository)-nodebrady
          skip: false
          overrides: ingress.enabled=false,image.repository=$(containerRegistry)/$(imageRepository)-nodebrady,image.tag=$(tag),image.useImagePullSecrets=true