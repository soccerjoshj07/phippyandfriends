# Deploy to Kubernetes - Review app with Azure DevSpaces
# Build and push image to Azure Container Registry; Deploy to Azure Kuberentes Services and setup Review App with Azure DevSpaces
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'b082a429-449c-4d55-9b39-98a5a1185be6'
  imageRepository: 'soccerjoshjphippyandfriends'
  containerRegistry: 'aciphippyaksdemo.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'aciphippyaksdemo8724f0cd-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
  # Azure Service connection
  azureConnection: 'a440ff8b-ecaf-4747-8235-04917f486dba'
  
  # Name of the new namespace being created to deploy the PR changes.
  k8sNamespaceForPR: '$(system.pullRequest.sourceBranch)'

  # K8s template
  helmVersion: 3.0.2
  projectName: parrot
  imageName: parrot
  #imageTag: $(tag)
  helmChartVersion: $(build.buildid)

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(projectName)/$(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: HelmInstaller@1
      inputs:
        helmVersionToInstall: $(helmVersion)

    - task: HelmDeploy@0
      inputs:
        command: 'package'
        chartPath: '$(projectName)/charts/$(projectName)'
        chartVersion: '$(tag)'
        save: false
        arguments: '--app-version $(tag)'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Visual Studio Enterprise â€“ MPN(93ddb8b3-ddb9-4d1c-ba59-421456e65538)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          cd $(projectName)
          chartPackage=$(ls $(projectName)-*.tgz)
          az acr helm push -n $(registryName) $chartPackage
          echo $(jq -n --arg version "$(helmChartVersion)" '{helmChartVersion: $version}') > $(build.artifactStagingDirectory)/variables.json
          
    - upload: charts
      artifact: charts

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'soccerjoshj07phippyandfriends-1741.dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: AzureCLI@2
            displayName: get host suffix
            inputs:
              azureSubscription: '$(azureConnection)'
              scriptType: 'pscore'
              scriptLocation: 'inlineScript'
              inlineScript: |
                $clusterId="/subscriptions/93ddb8b3-ddb9-4d1c-ba59-421456e65538/resourcegroups/rg-phippyaks-demo/providers/Microsoft.ContainerService/managedClusters/aks-phippyaksdemo"
                #$resourceGroupName=$(cut -d '/' -f5 <<< "$clusterId")
                $resourceGroupName=($clusterId -split '/')[4]
                #$clusterName=$(cut -d '/' -f9 <<< "$clusterId")
                $clusterName=($clusterId -split '/')[8]
                az aks use-dev-spaces -n $clusterName -g $resourceGroupName -s dev -y
                $hostSuffix=$(azds show-context -o json | ConvertFrom-Json).controller.hostSuffix
                write-host $hostSuffix
                $hostSuffix=$hostSuffix -replace '[^a-zA-Z0-9]', ''
                echo "##vso[task.setvariable variable=HostSuffix]$hostSuffix"

          - task: KubernetesManifest@0
            displayName: Bake manifests
            name: bake
            inputs:
              action: bake
              helmChart: $(Pipeline.Workspace)/charts/devspaces-v0.0.1.tgz
              overrides: |
                image.repository:$(containerRegistry)/$(imageRepository)
                service.port:80 
                ingress.enabled:true
                ingress.hostname:app.$(HostSuffix)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(bake.manifestsBundle)
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

  - deployment: DeployPullRequest
    displayName: Deploy Pull request
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/pull/'))
    pool:
      vmImage: $(vmImageName)
      
    environment: 'soccerjoshj07phippyandfriends-1741.$(k8sNamespaceForPR)'
    strategy:
      runOnce:
        deploy:
          steps:
          - reviewApp: dev

          - task: Kubernetes@1
            displayName: 'Create a new namespace for the pull request'
            inputs:
              command: apply
              useConfigurationFile: true
              inline: '{ "kind": "Namespace", "apiVersion": "v1", "metadata": { "name": "$(k8sNamespaceForPR)" }}'

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              namespace: $(k8sNamespaceForPR)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
          
          - task: AzureCLI@2
            displayName: get host suffix
            inputs:
              scriptType: pscore
              scriptLocation: inlineScript
              azureSubscription: $(azureConnection)
              inlineScript: |
                $clusterId="/subscriptions/93ddb8b3-ddb9-4d1c-ba59-421456e65538/resourcegroups/rg-phippyaks-demo/providers/Microsoft.ContainerService/managedClusters/aks-phippyaksdemo"
                $resourceGroupName=$(cut -d '/' -f5 <<< "$clusterId")
                $clusterName=$(cut -d '/' -f9 <<< "$clusterId")
                az aks use-dev-spaces -n $clusterName -g $resourceGroupName -s dev -y
                $hostSuffix=$(azds show-context -o json | ConvertFrom-Json).controller.hostSuffix
                echo "##vso[task.setvariable variable=HostSuffix]$hostSuffix"

          - task: KubernetesManifest@0
            displayName: Bake manifests
            name: bake
            inputs:
              action: bake
              helmChart: $(Pipeline.Workspace)/charts/devspaces-v0.0.1.tgz
              overrides: |
                image.repository:$(containerRegistry)/$(imageRepository)
                service.port:80 
                ingress.enabled:true
                ingress.hostname:$(k8sNamespaceForPR).s.app.$(HostSuffix)
                
          - task: KubernetesManifest@0
            displayName: Deploy to the new namespace in the Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespaceForPR)
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

          - script: |
              message="Deployment to your Review App succeeded.<br><br>You can navigate to http://$(k8sNamespaceForPR).s.app.$(HostSuffix) to test your changes"
              echo "##vso[task.setvariable variable=GITHUB_COMMENT]$message"
