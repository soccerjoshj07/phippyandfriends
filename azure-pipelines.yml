# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches: 
    include: 
      - master
  paths:
    exclude:
      - azure-pipelines-sub1.yml
      - .github/*

resources:
  repositories:
  - repository: templates
    name: pipeline-templates
    type: git

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'aciphippyaksdemo-1187' # you have to create this endpoint in AzDO
  imageRepository: 'soccerjoshjphippyandfriends'
  containerRegistry: 'aciphippyaksdemo.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildNumber)'
  imagePullSecret: 'aciphippyaksdemo11879e66-auth'
  environment: soccerjoshj07phippyandfriends.phippyandfriends
  namespace: phippyandfriends
  varGroup: phippyandfriends-dev-kv
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

  # project
  projectName: parrot

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - template: k8s/job-k8s-build.yml@templates
    parameters:
      dockerRegistryServiceConnection: $(dockerRegistryServiceConnection)
      tag: $(tag)
      services:
        - serviceName: parrot
          imageRepository: $(imageRepository)-parrot
          projectPath: parrot
          skip: false
        - serviceName: captainkube
          imageRepository: $(imageRepository)-captainkube
          projectPath: captainkube
          skip: false
        - serviceName: phippy
          imageRepository: $(imageRepository)-phippy
          projectPath: phippy
          skip: false
        - serviceName: nodebrady
          imageRepository: $(imageRepository)-nodebrady
          projectPath: nodebrady
          skip: false

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - template: k8s/job-k8s-deploy.yml@templates
    parameters:
      imagePullSecret: $(imagePullSecret)
      dockerRegistryServiceConnection: $(dockerRegistryServiceConnection)
      containerRegistry: $(containerRegistry)
      #tag: $(tag)
      environment: $(environment)
      namespace: $(namespace)
      varGroup: ${{ variables.varGroup }}
      services:
        - serviceName: parrot
          imageRepository: $(imageRepository)-parrot
          skip: false
          #ingress.enabled: false
          overrides: |
            ingress.enabled:false
            image.repository:$(containerRegistry)/$(imageRepository)-parrot
            image.tag:$(tag)
            parrot.AppEnvironment__Name:demo
        - serviceName: captainkube
          imageRepository: $(imageRepository)-captainkube
          #ingress.enabled: false
          skip: false
          overrides: |
            ingress.enabled:false
            image.repository:$(containerRegistry)/$(imageRepository)-captainkube
            image.tag:$(tag)
        - serviceName: phippy
          imageRepository: $(imageRepository)-phippy
          skip: false
          #ingress.enabled: false 
          overrides: |
            ingress.enabled:false
            image.repository:$(containerRegistry)/$(imageRepository)-phippy
            image.tag:$(tag)
        - serviceName: nodebrady
          imageRepository: $(imageRepository)-nodebrady
          skip: false
          #ingress.enabled: false 
          overrides: |
            ingress.enabled:false
            image.repository:$(containerRegistry)/$(imageRepository)-nodebrady
            image.tag:$(tag)