# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
  repositories:
  - repository: templates
    name: pipeline-templates
    type: git

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'aciphippyaksdemo-1187' # you have to create this endpoint in AzDO
  imageRepository: 'soccerjoshjphippyandfriends'
  containerRegistry: 'aciphippyaksdemo.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildNumber)'
  imagePullSecret: 'aciphippyaksdemo11879e66-auth'
  environment: soccerjoshj07phippyandfriends.phippyandfriends

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

  # project
  projectName: parrot
  namespace: phippyandfriends

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)-captainkube
        dockerfile: captainkube/$(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)-parrot
        dockerfile: $(projectName)/$(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)-phippy
        dockerfile: phippy/$(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - publish: manifests
      artifact: manifests

    - publish: captainkube/charts/captainkube
      artifact: charts-captainkube

    - publish: $(projectName)/charts/$(projectName)
      artifact: charts-parrot

    - publish: phippy/charts/phippy
      artifact: charts-phippy

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - template: k8s/job-k8s-deploy.yml
    parameters:
      imagePullSecret: $(imagePullSecret)
      dockerRegistryServiceConnection: $(dockerRegistryServiceConnection)
      containerRegistry: (containerRegistry)
      imageRepository: $(imageRepository)
      tag: $(tag)
      environment: $(environment)
      services:
        - serviceName: captainkube
          imageRepo: $(imageRepository)-captainkube
          ingress.enabled: false
          skip: false
        - serviceName: parrot
          imageRepo: $(imageRepository)-parrot
          skip: false
          ingress.enabled: false
        - serviceName: phippy
          imageRepo: $(imageRepository)-phippy
          skip: false
          ingress.enabled: false 

          # - task: KubernetesManifest@0
          #   displayName: Create imagePullSecret
          #   inputs:
          #     action: 'createSecret'
          #     namespace: '$(namespace)'
          #     secretType: 'dockerRegistry'
          #     secretName: '$(imagePullSecret)'
          #     dockerRegistryEndpoint: '$(dockerRegistryServiceConnection)'

          # Out of the box kubernetes manifest deploy
          # - task: KubernetesManifest@0
          #    displayName: Deploy to Kubernetes cluster
          #    inputs:
          #      action: deploy
          #      manifests: |
          #        $(Pipeline.Workspace)/manifests/deployment.yml
          #        $(Pipeline.Workspace)/manifests/service.yml
          #      imagePullSecrets: |
          #        $(imagePullSecret)
          #      containers: |
          #        $(containerRegistry)/$(imageRepository):$(tag)

          # Helm Upgrade w/ helm 3.0.x
          # - task: HelmInstaller@1
          #  inputs:
          #    helmVersionToInstall: 'latest'

          # - task: HelmDeploy@0
          #   inputs:
          #     connectionType: 'Azure Resource Manager'
          #     azureSubscription: 'Visual Studio Enterprise â€“ MPN (93ddb8b3-ddb9-4d1c-ba59-421456e65538)'
          #     azureResourceGroup: 'rg-phippyaks-demo2'
          #     kubernetesCluster: 'aks-phippyaksdemo'
          #     namespace: 'phippyandfriends'
          #     command: 'upgrade'
          #     chartType: 'FilePath'
          #     chartPath: '$(Pipeline.Workspace)/charts'
          #     releaseName: '$(namespace)-website'
          #     overrideValues: 'ingress.enabled=false,image.repository=$(containerRegistry)/$(imageRepository),image.tag=$(tag)'
          #     waitForExecution: false

          # Kubernetes bake and manifest deploy
          # - task: KubernetesManifest@0
          #   displayName: Bake $(projectName) manifest
          #   name: bake_${{ variables.projectName }}
          #   inputs:
          #     action: 'bake'
          #     namespace: '$(namespace)'
          #     helmChart: '$(Pipeline.Workspace)/parrotcharts'
          #     releaseName: 'parrot'
          #     overrides: |
          #       ingress.enabled:false
          #       image.repository:$(containerRegistry)/$(imageRepository)
          #       image.tag:$(tag)
            
          # - task: KubernetesManifest@0
          #   displayName: Deploy ${{ variables.projectName }} to k8s
          #   inputs:
          #     manifests: $(bake_${{ variables.projectName }}.manifestsBundle)
          #     imagePullSecrets: $(imagePullSecret)