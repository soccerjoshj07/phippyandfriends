# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'e113c49e-ecfe-4413-a6e3-efe82692721c'
  imageRepository: 'soccerjoshjphippyandfriends'
  containerRegistry: 'aciphippyaksdemo.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'aciphippyaksdemo2710c7ee-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # project vars
  projectName: parrot
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(projectName)/$(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - upload: manifests
      artifact: manifests

    - upload: 
      artifact: charts

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'soccerjoshj07phippyandfriends.phippyandfriends'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
#          - task: KubernetesManifest@0
#            displayName: Deploy to Kubernetes cluster
#            inputs:
#              action: deploy
#              manifests: |
#                $(Pipeline.Workspace)/manifests/deployment.yml
#                $(Pipeline.Workspace)/manifests/service.yml
#              imagePullSecrets: |
#                $(imagePullSecret)
#              containers: |
#                $(containerRegistry)/$(imageRepository):$(tag)

          - task: HelmInstaller@1
            inputs:
              helmVersionToInstall: 'latest'

          - task: HelmDeploy@0
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: 'Visual Studio Enterprise â€“ MPN (93ddb8b3-ddb9-4d1c-ba59-421456e65538)'
              azureResourceGroup: 'rg-phippyaks-demo'
              kubernetesCluster: 'aks-phippyaksdemo'
              namespace: 'phippyandfriends'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(Pipeline.Workspace)/charts/$(projectName)/charts/$(projectName)'
              releaseName: '$(projectName)'
              overrideValues: 'ingress.enabled=false'
          

